apiVersion: apps/v1
kind: Deployment
metadata:
  name: hellobluegk-api
  labels:
    app: hellobluegk-api
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: hellobluegk-api
  template:
    metadata:
      labels:
        app: hellobluegk-api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: hellobluegk-api
        image: hellobluegk:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: hellobluegk-secrets
              key: database-connection
        - name: Jwt__Key
          valueFrom:
            secretKeyRef:
              name: hellobluegk-secrets
              key: jwt-secret
        - name: Jwt__Issuer
          value: "https://api.helloblue.com"
        - name: Jwt__Audience
          value: "https://app.helloblue.com"
        - name: OPENFOAM_VERSION
          value: "8"
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
          limits:
            memory: "16Gi"
            cpu: "8"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: simulation-data
          mountPath: /app/data
        - name: simulation-logs
          mountPath: /app/logs
        - name: simulation-cases
          mountPath: /app/cases
        - name: openfoam-config
          mountPath: /opt/openfoam8/etc
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: simulation-data
        persistentVolumeClaim:
          claimName: simulation-data-pvc
      - name: simulation-logs
        persistentVolumeClaim:
          claimName: simulation-logs-pvc
      - name: simulation-cases
        persistentVolumeClaim:
          claimName: simulation-cases-pvc
      - name: openfoam-config
        configMap:
          name: openfoam-config

---
apiVersion: v1
kind: Service
metadata:
  name: hellobluegk-service
  labels:
    app: hellobluegk-api
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    name: http
  - protocol: TCP
    port: 443
    targetPort: 8080
    name: https
  selector:
    app: hellobluegk-api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hellobluegk-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - api.helloblue.com
    secretName: hellobluegk-tls
  rules:
  - host: api.helloblue.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hellobluegk-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: simulation-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: simulation-logs-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: simulation-cases-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 200Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openfoam-config
data:
  controlDict: |
    /*--------------------------------*- C++ -*----------------------------------*\
    | =========                 |                                                 |
    | \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
    |  \\    /   O peration     | Version:  8                                     |
    |   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
    |    \\/     M anipulation  |                                                 |
    \*---------------------------------------------------------------------------*/
    FoamFile
    {
        version     2.0;
        format      ascii;
        class       dictionary;
        location    "system";
        object      controlDict;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
    
    application     simpleFoam;
    
    startFrom       startTime;
    
    startTime       0;
    
    stopAt          endTime;
    
    endTime         1000;
    
    deltaT          1;
    
    writeControl    timeStep;
    
    writeInterval   100;
    
    purgeWrite      0;
    
    writeFormat     ascii;
    
    writePrecision  6;
    
    writeCompression off;
    
    timeFormat      general;
    
    timePrecision   6;
    
    runTimeModifiable true;

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hellobluegk-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hellobluegk-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hellobluegk-monitor
  labels:
    release: prometheus
spec:
  selector:
    matchLabels:
      app: hellobluegk-api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s 